CVS
ファイルの変更履歴を管理してくれるシステム。ファイルの差分のみを送受信するためファイルのすべてをその都度送受信することなく動作が軽い。複数の利用者が同じファイルに更新しても更新箇所が重複していなければそれぞれ変更でき統合できる。
＜デメリット＞
ファイル名やディレクトリを変更できない。リポジトリの分散に対応しない。ASCII文字以外のファイル名を正しく扱えない。差分を抽出できず保管容量が増大する。

欠点を改良したのがSVN、CVSを悪いお手本として開発されたのがGit

Mercurial
クロスプラットフォーム型の分散バージョン管理システム。そのため、異なるOSでも動作する。履歴を操作するコマンドが一種類しかない。単純なコマンドしか使わないため操作は楽。
＜デメリット＞
間違ってしまった場合の処置が難しい。特にマージの戻しが難しい。マージを戻すためのデフォルトのコマンドがなく拡張コマンドが必要。

git
リーナス・トーバルズが開発
プログラムのソースコードなどの変更履歴を記録・追跡するための分散型バージョン管理システム、Linuxカーネルのソースコード管理に用いられている

Perforce
Christopher Seiwaldが1995年に創設した Perforce Software, Inc. が開発
サーバがソースファイル群のバージョンを1つ以上のdepotsで管理する。サーバはLinux、UNIX、macOS、Windowsといったオペレーティングシステムで動作する。

Subversion　
生い立ち CVSの問題点解決
特徴 ディレクトリの移動、削除が可能　
　　バージョンがソースツリー全体に対して割り振られる
　　SSHでの通信が可能
　　WebDAVの対応

Bazaar
生い立ち 一番の使いやすさ、正確さ及び柔軟性を目指した
特徴 CVSとコマンドが同様
　　中央サーバーの有無両方でのサポート
　　何種類かの他のリビジョン管理システムでの動作をサポート